Trabalho opcional de probabilidade e estatística

alunos: 
Arthur Moreira de Albuquerque DRE 114146877
Miguel Santos de Araujo do Nascimento DRE 115191914

Questão 1)
a) A função de probabilidade teórica da variável aleatória é P(X=x) = (9! * (x-1))/((11-x)! * (10^(x-1)))

explicando o código:

a declaração do simulador da questão 1 vai receber como parâmetro o número de simulações desejado pelo usuário

algoritmo de simular questao 1 (número de simulações)
    inicializa vetor lista_dos_x que vai armazenar todos os x simulados

    media = 0 (não se preocupe, o x de cada iteração será adicionado nessa variável e depois essa variável vai ser dividida pelo número de iterações)

    executa esse bloco pelo número de simulações fornecido como parâmetro do algoritmo:

        inicializa um vetor bolas_sorteadas que armazena quais bolas ja foram sorteadas

        x=0

        bola sorteada = número aleatorio no intervalo de 1 até 10

        se a bola sorteada já estiver dentro do vetor de bolas_sorteadas:
            media = media + x
            adiciona x no vetor lista_dos_x
            para de sortear bolas e termina essa simulação
        
        se a bola nao estiver no vetor de bolas sorteadas:
            adiciona ela no vetor bolas_sorteadas
    media = media/numero_de_simulacoes
    imprime lista_dos_x
    imprime media

calcula probabilidade vai receber abaixo o x desejado como parametro
calcula_probabilidade(x):
    se x > 11:
        retorna q a probabilidade é zero

    probabilidade = 1

    buffer = 9

    para i variando de 2 ate 11 faça:
        se i for igual a 11:
            probabilidade = probabilidade * (x - 1)/10
        senao:
            probabilidade = probabilidade * (buffer/10)
            buffer = buffer - 1
    imprime a probabilidade
    retorna a probabilidade

calcula a esperança():
    esperança = 0
    para i variando de 2 ate 12 faça:
        esperanca = esperanca + (i)*calcula_probabilidade(i)
    imprime a esperança
    retorna a esperança


questao 3)

algoritmo FuncaoQuestao3(x):
    Retorno 4*(x**2)*math.exp(-3*x**2), que é a função f(x) dada no enunciado;

Função que calcula a aproximação da integral usando Monte Carlo
MonteCarlo():
    a = Limite inferior de integração;
    b = Limite superior de integração;

    N = Número de pontos, escolhidos aleatoriamente, para realizar o método de Monte Carlo;

    pontos = Vetor, de tamanho N, que armazena os pontos escolhidos. É iniciado com todos os valores igual a zero, para poder armazenar os pontos depois;

    Para todo número i, tal que 0 <= i < N:
        pontos[i] = Recebe um número aleatório;

    somatorio = 0.0, variável que armazenará o valor do somatório;

    Para todo número i, tal que 0 <= i < N:
	somatorio = somatorio + FuncaoQueQueroIntegrar(pontos[i]). Em outras palavras, somo f(pontos[i]) ao somatório;

    integralAproximada = ((b-a)/N)*somatorio, que é a fórmula da aproximação da integral através de Monte Carlo;

    retorno integralAproximada;

Função Simula_Questao3(k)
    resultadoSimulacao = 0, variável que armazena o resultado da simulação atual;

    Para todo número i, tal que 0 <= i < k:
        resultadoSimulacao = Faço uma simulação de Monte Carlo;
        Escrevo o número da simulação, seguido de seu resultado;

Executo a função Simula_Questao3() 5000 vezes;